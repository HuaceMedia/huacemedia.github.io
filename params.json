{"name":"Dnsyo","tagline":"Check your DNS against over 1500 global DNS servers","body":"#DNSYO\r\n##AALLLLL THE DNS\r\n\r\nDNSYO is a little tool I built to help me keep track of DNS propagation.\r\n\r\nIn short, it's `nslookup`, if `nslookup` queried over 1500 servers and collated their results.\r\n\r\nHere's what it does\r\n\r\n    $ dnsyo -t 100 -q ALL example.com\r\n    Status: Queried 1804 of 1804 servers, duration: 0:00:09.334441\r\n\r\n     - RESULTS\r\n\r\n    I asked 1804 servers for A records related to example.com,\r\n    1771 responded with records and 33 gave errors\r\n    Here are the results;\r\n\r\n\r\n    1738 servers responded with;\r\n    93.184.216.119\r\n\r\n    26 servers responded with;\r\n    127.0.0.1\r\n\r\n    1 servers responded with;\r\n    97.87.216.210\r\n\r\n    1 servers responded with;\r\n    64.202.162.37\r\n\r\n    1 servers responded with;\r\n    68.87.91.199\r\n\r\n    1 servers responded with;\r\n    216.8.179.23\r\n\r\n    2 servers responded with;\r\n    77.244.128.69\r\n\r\n    1 servers responded with;\r\n    1.1.1.12\r\n\r\n\r\n\r\n    And here are the errors;\r\n\r\n\r\n    8 servers responded with;\r\n    No Nameservers\r\n\r\n    4 servers responded with;\r\n    No Answer\r\n\r\n    21 servers responded with;\r\n    Server Timeout\r\n\r\n##Installation\r\n\r\nDNSYO requires Python 2.6 or later. The easiest way to install is by running\r\n\r\n    pip install dnsyo --upgrade\r\n\r\nYou should probably install it within a virtualenv.\r\n\r\nIf all goes well, you should be clear to start querying stuff\r\n\r\nTo test, try running\r\n\r\n    dnsyo google.com\r\n\r\nIt will query 500 random DNS servers in the database, and give you the results.\r\n\r\n##Usage\r\n\r\nFor more information on the flags run `dnsyo -h`\r\n\r\n###Output modes\r\n\r\nDNSYO has 3 output modes;\r\n\r\n  * standard - Will display all the results and errors from querying\r\n  * extended - Same as standard but includes the names and addresses of the servers it queried\r\n  * simple - Simple output mode which is useful for UNIX scripting\r\n\r\nTo change output mode, pass ether `--extended` or `--simple` to DNSYO.\r\n\r\n###Resolver list\r\n\r\nDNSYO periodically updates it's internal resolver database from this repo. The first time you run it, and once every 2 weeks, it will try to download the `resolver-list.yml` file and store it to `~/.dnsyo-resovers-list.yaml` directory. If you know of any more open DNS resolvers feel free to add them to the list.\r\n\r\nBy default, DNSYO will pick 500 servers at random from it's list to query. You can change this with the `--servers` or `-q` flag. If you want DNSYO to query all the servers just pass `--servers=ALL` or `-q=ALL`.\r\n\r\n###Record types\r\n\r\nJust like `dig`, you can pass the record type as the second positional argument to DNSYO, so to get Google's MX records just do\r\n\r\n    dnsyo google.com MX\r\n\r\n##Licence\r\n\r\nDNSYO is released under the MIT licence, see `LICENCE.txt` for more info\r\n\r\n##Documentation\r\n\r\nModule documentation is available for dnsyo, you can view the module documentation as generated by [epydoc](http://codesam-files.s3-website-us-east-1.amazonaws.com/dnsyo-docs/epydoc/) or [docco](http://codesam-files.s3-website-us-east-1.amazonaws.com/dnsyo-docs/docco/dnsyo.html)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}